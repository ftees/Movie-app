{"version":3,"sources":["components/MovieList.js","components/Heading.js","components/Search.js","components/AddFavour.js","components/RemoveFavour.js","components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","Favourites","favorites","movie","map","index","className","onClick","openDetail","imdbID","src","Poster","alt","addFavorites","Heading","title","Search","type","value","onChange","e","setSearchValue","target","placeholder","AddFavour","RemoveFavour","Detail","useState","detail","setDetail","id","idPara","getMovieDetail","a","fetch","response","json","responseJson","useEffect","Title","Actors","Genre","Country","Writer","Director","Language","Runtime","Released","App","setMovie","searchValue","showDetail","setShowDetail","movieID","setMovieID","favoritesList","setFavoritesList","fetchMovie","results","console","log","saveFavorite","localStorage","setItem","JSON","stringify","parse","getItem","newFavorites","favouritesItems","filter","data","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aae43b50.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MovieList = props => {\r\n  const Favourites = props.favorites;\r\n  return (\r\n       <>\r\n      {props.movie.map((movie,index) =>(\r\n         \r\n           <div className=\"d-flex justify-content-start m-2 image-container\" onClick ={() => props.openDetail(movie.imdbID)}>\r\n           <img src={movie.Poster} alt=\"\"></img>\r\n           <div className=\"overlay d-flex justify-content-center align-items-center\" onClick={() => props.addFavorites(movie)}>\r\n             <Favourites />\r\n           </div>\r\n         </div>\r\n         \r\n      ))}\r\n    </>\r\n        \r\n  )\r\n}\r\n\r\n\r\nexport default MovieList\r\n","import React from 'react'\r\n\r\nconst Heading = props => {\r\n  return (\r\n    <div className=\"col\">\r\n    <h1 className=\"heading\">{props.title}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Heading\r\n","import React from 'react'\r\n\r\n\r\nconst Search = props => {\r\n  return (\r\n    <div className=\"col col-md-4 searchbox\">\r\n      <input type=\"text\" className=\"form-control\"\r\n       value = {props.value}\r\n       onChange={(e)=> props.setSearchValue(e.target.value)}\r\n       placeholder=\"search movie\"></input>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\n\r\nconst AddFavour = props => {\r\n  return (\r\n    <span className=\"mr-2 addFavour\">Add to Favourites ❤</span>\r\n  )\r\n}\r\n\r\nexport default AddFavour\r\n","import React from 'react'\r\n\r\n\r\nconst RemoveFavour = props => {\r\n  return (\r\n    <span className=\"mr-2 addFavour\">Remove movie ❌</span>\r\n  )\r\n}\r\n\r\nexport default RemoveFavour\r\n","import React from \"react\";\r\nimport {useState, useEffect } from 'react';\r\nconst Detail = (props) => {\r\n  const [detail, setDetail] = useState({});\r\n  const id = props.idPara;\r\n  const getMovieDetail = async (id) =>{\r\n      const response = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=c9127ecc`)\r\n      const responseJson = await response.json();\r\n      setDetail(responseJson);\r\n  }\r\n  useEffect(()=>{\r\n    getMovieDetail(id);\r\n  },[detail])\r\n  return (\r\n    <div className=\"container-fluid d-flex mt-4 mb-4\">\r\n      <img src={detail.Poster}></img>\r\n      <div className=\"col-2\"></div>\r\n      <div className=\"infomation\">\r\n      <h1>Title: {detail.Title}</h1>\r\n      <p>Actor: {detail.Actors}</p>\r\n      <p>Genre: {detail.Genre}</p>\r\n      <p>Country: {detail.Country}</p>\r\n      <p>Writer: {detail.Writer}</p>\r\n      <p>Director: {detail.Director}</p>\r\n      <p>Language: {detail.Language}</p>\r\n      <p>Runtime: {detail.Runtime}</p>\r\n      <p>Released: {detail.Released}</p>\r\n      <button className=\"btn btn-primary\"><b>Watch Movie</b></button>\r\n      <button className=\"btn btn-danger\"><b>Download</b></button>\r\n      </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport { useEffect } from \"react\";\nimport Heading from \"./components/Heading\";\nimport Search from \"./components/Search\";\nimport AddFavour from \"./components/AddFavour\";\nimport RemoveFavour from \"./components/RemoveFavour\";\nimport Detail from \"./components/Detail\";\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"all\");\n  const [showDetail, setShowDetail] = useState(false);\n  const [movieID, setMovieID] = useState(\"\");\n  const [favoritesList, setFavoritesList] = useState([]);\n  const fetchMovie = async (searchValue) => {\n    const response = await fetch(\n      `https://www.omdbapi.com/?s=${searchValue}&apikey=c9127ecc`\n    );\n    const results = await response.json();\n    console.log(results);\n    if (results.Search) {\n      setMovie(results.Search);\n    }\n  };\n  useEffect(() => {\n    fetchMovie(searchValue);\n  }, [searchValue]);\n  const openDetail = (id) => {\n    setMovieID(id);\n    setShowDetail(true);\n  };\n\n  const saveFavorite = (movie) => {\n    localStorage.setItem(\"favorites-movie\",JSON.stringify(movie));\n  };\n  useEffect(() => {\n    if(JSON.parse(localStorage.getItem(\"favorites-movie\"))){\n    setFavoritesList(JSON.parse(localStorage.getItem(\"favorites-movie\")));\n    }\n  }, []);\n  const addFavorites = (movie) => {\n    const newFavorites = [...favoritesList, movie];\n    const favouritesItems = newFavorites.filter((data,index)=>{\n      return newFavorites.indexOf(data) === index;\n    })\n    setFavoritesList(favouritesItems);\n    saveFavorite(favouritesItems);\n  };\n\n  const removeFavorites = (movie) => {\n    const newFavorites = favoritesList.filter(\n      (favorites) => favorites.imdbID !== movie.imdbID\n    );\n    setFavoritesList(newFavorites);\n    saveFavorite(newFavorites);\n  };\n\n  return (\n    <div className=\"container-fluid app\">\n      <h1 className=\"title-name\">FTees.net</h1>\n      <div className=\"row d-flex align-items-center mt-4 mb-4\"></div>\n      {showDetail ? (\n        <div>\n          <Heading title=\"Movie detail\" />\n          <Detail idPara={movieID} />\n        </div>\n      ) : (\n        \" \"\n      )}\n\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <Heading title=\"Movies\" />\n        <Search value={searchValue} setSearchValue={setSearchValue}></Search>\n      </div>\n      <div className=\"row\">\n        <MovieList\n          movie={movie}\n          favorites={AddFavour}\n          addFavorites={addFavorites}\n          openDetail={openDetail}\n        ></MovieList>\n      </div>\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <Heading title=\"Favourites Movie\" />\n      </div>\n      <div className=\"row\">\n        <MovieList\n          movie={favoritesList}\n          favorites={RemoveFavour}\n          addFavorites={removeFavorites}\n          openDetail={openDetail}\n        ></MovieList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}